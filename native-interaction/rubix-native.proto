syntax = "proto3";

package protos;

option go_package = "github.com/getfexr/protos";

import "google/protobuf/empty.proto";

message CreateDIDReq {
  string didImage = 1;
  string publicShare = 2;
  string publicKey = 3;
}

message CreateDIDRes {
  string did = 1;
  bool status = 2;
}

message RequestTransactionPayloadReq {
  string receiver = 1;
  double tokenCount = 2;
  string comment = 3;
  int32 type = 4;
  optional string privateKeyPass = 5;
}

message TxnSummary {
  string txnId = 1;
  string sender = 2;
  string receiver = 3;
  double amount = 4;
  string comment = 5;
}

message TransactionLastObject {
  string hash = 1;
  string token = 2;
}

message TransactionLastObjectSigned {
  string chainSign = 1;
  string hash = 2;
  string token = 3;
}

message SignedHash {
  string hash = 1;
  string sign = 2;
}

message PledgeDetail {
  repeated string valueArr = 1;
}

message PledgeDetailSigned {
  repeated SignedHash valueArr = 2;
}

message RequestTransactionPayloadRes {
  string authSenderByRecHash = 1;
  repeated TransactionLastObject lastObject = 2;
  string senderPayloadSign = 3;
  map<string, PledgeDetail> pledgeDetails = 4;
}

message FinaliseTransactionPayload {
  SignedHash authSenderByRecHash = 1;
  repeated TransactionLastObjectSigned lastObject = 2;
  SignedHash senderPayloadSign = 3;
  optional string privateKeyPass = 4;
  map<string,PledgeDetailSigned> pledgeDetails = 5;
}

message GetTransactionLogReq {
  uint32 count = 1;
}

message GetTransactionLogRes {
  repeated TxnSummary txnLog = 1;
}

message GetBalanceRes {
  double balance = 1;
}

service RubixService {
  rpc CreateDID (CreateDIDReq) returns (CreateDIDRes) {}

  rpc InitiateTransaction (RequestTransactionPayloadReq) returns (RequestTransactionPayloadRes) {}
  rpc FinaliseTransaction (FinaliseTransactionPayload) returns (TxnSummary) {}

  rpc GetTransactionLog (GetTransactionLogReq) returns (GetTransactionLogRes) {}
  rpc GetBalance (google.protobuf.Empty) returns (GetBalanceRes) {}
}
