// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pop.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushNotification_NOTIFICATION_TYPE int32

const (
	PushNotification_PAY       PushNotification_NOTIFICATION_TYPE = 0
	PushNotification_SIGN      PushNotification_NOTIFICATION_TYPE = 1
	PushNotification_REMINDER  PushNotification_NOTIFICATION_TYPE = 2
	PushNotification_PROMOTION PushNotification_NOTIFICATION_TYPE = 3
)

// Enum value maps for PushNotification_NOTIFICATION_TYPE.
var (
	PushNotification_NOTIFICATION_TYPE_name = map[int32]string{
		0: "PAY",
		1: "SIGN",
		2: "REMINDER",
		3: "PROMOTION",
	}
	PushNotification_NOTIFICATION_TYPE_value = map[string]int32{
		"PAY":       0,
		"SIGN":      1,
		"REMINDER":  2,
		"PROMOTION": 3,
	}
)

func (x PushNotification_NOTIFICATION_TYPE) Enum() *PushNotification_NOTIFICATION_TYPE {
	p := new(PushNotification_NOTIFICATION_TYPE)
	*p = x
	return p
}

func (x PushNotification_NOTIFICATION_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushNotification_NOTIFICATION_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_pop_proto_enumTypes[0].Descriptor()
}

func (PushNotification_NOTIFICATION_TYPE) Type() protoreflect.EnumType {
	return &file_pop_proto_enumTypes[0]
}

func (x PushNotification_NOTIFICATION_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushNotification_NOTIFICATION_TYPE.Descriptor instead.
func (PushNotification_NOTIFICATION_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{7, 0}
}

type TxnStatus_TRANSACTION_STATUS int32

const (
	TxnStatus_SUCCESS    TxnStatus_TRANSACTION_STATUS = 0
	TxnStatus_FAILED     TxnStatus_TRANSACTION_STATUS = 1
	TxnStatus_VALIDATING TxnStatus_TRANSACTION_STATUS = 2
	TxnStatus_CANCELED   TxnStatus_TRANSACTION_STATUS = 3
)

// Enum value maps for TxnStatus_TRANSACTION_STATUS.
var (
	TxnStatus_TRANSACTION_STATUS_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
		2: "VALIDATING",
		3: "CANCELED",
	}
	TxnStatus_TRANSACTION_STATUS_value = map[string]int32{
		"SUCCESS":    0,
		"FAILED":     1,
		"VALIDATING": 2,
		"CANCELED":   3,
	}
)

func (x TxnStatus_TRANSACTION_STATUS) Enum() *TxnStatus_TRANSACTION_STATUS {
	p := new(TxnStatus_TRANSACTION_STATUS)
	*p = x
	return p
}

func (x TxnStatus_TRANSACTION_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxnStatus_TRANSACTION_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_pop_proto_enumTypes[1].Descriptor()
}

func (TxnStatus_TRANSACTION_STATUS) Type() protoreflect.EnumType {
	return &file_pop_proto_enumTypes[1]
}

func (x TxnStatus_TRANSACTION_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxnStatus_TRANSACTION_STATUS.Descriptor instead.
func (TxnStatus_TRANSACTION_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{8, 0}
}

type RubixWalletData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DIDShare     *string                    `protobuf:"bytes,1,opt,name=DIDShare,proto3,oneof" json:"DIDShare,omitempty"`
	PublicShare  *string                    `protobuf:"bytes,2,opt,name=PublicShare,proto3,oneof" json:"PublicShare,omitempty"`
	PrivateShare *string                    `protobuf:"bytes,3,opt,name=PrivateShare,proto3,oneof" json:"PrivateShare,omitempty"`
	Balance      *float64                   `protobuf:"fixed64,5,opt,name=balance,proto3,oneof" json:"balance,omitempty"`
	Th           []*TransactionHistory      `protobuf:"bytes,6,rep,name=th,proto3" json:"th,omitempty"`
	Qst          []*QuorumSignedTransaction `protobuf:"bytes,7,rep,name=qst,proto3" json:"qst,omitempty"`
	Tc           []*TokenChain              `protobuf:"bytes,8,rep,name=tc,proto3" json:"tc,omitempty"`
}

func (x *RubixWalletData) Reset() {
	*x = RubixWalletData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RubixWalletData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RubixWalletData) ProtoMessage() {}

func (x *RubixWalletData) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RubixWalletData.ProtoReflect.Descriptor instead.
func (*RubixWalletData) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{0}
}

func (x *RubixWalletData) GetDIDShare() string {
	if x != nil && x.DIDShare != nil {
		return *x.DIDShare
	}
	return ""
}

func (x *RubixWalletData) GetPublicShare() string {
	if x != nil && x.PublicShare != nil {
		return *x.PublicShare
	}
	return ""
}

func (x *RubixWalletData) GetPrivateShare() string {
	if x != nil && x.PrivateShare != nil {
		return *x.PrivateShare
	}
	return ""
}

func (x *RubixWalletData) GetBalance() float64 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

func (x *RubixWalletData) GetTh() []*TransactionHistory {
	if x != nil {
		return x.Th
	}
	return nil
}

func (x *RubixWalletData) GetQst() []*QuorumSignedTransaction {
	if x != nil {
		return x.Qst
	}
	return nil
}

func (x *RubixWalletData) GetTc() []*TokenChain {
	if x != nil {
		return x.Tc
	}
	return nil
}

type TokenChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenHash    string `protobuf:"bytes,1,opt,name=tokenHash,proto3" json:"tokenHash,omitempty"`
	TokenContent string `protobuf:"bytes,2,opt,name=tokenContent,proto3" json:"tokenContent,omitempty"`
	ChainData    string `protobuf:"bytes,3,opt,name=chainData,proto3" json:"chainData,omitempty"`
	Holding      bool   `protobuf:"varint,4,opt,name=holding,proto3" json:"holding,omitempty"`
}

func (x *TokenChain) Reset() {
	*x = TokenChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenChain) ProtoMessage() {}

func (x *TokenChain) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenChain.ProtoReflect.Descriptor instead.
func (*TokenChain) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{1}
}

func (x *TokenChain) GetTokenHash() string {
	if x != nil {
		return x.TokenHash
	}
	return ""
}

func (x *TokenChain) GetTokenContent() string {
	if x != nil {
		return x.TokenContent
	}
	return ""
}

func (x *TokenChain) GetChainData() string {
	if x != nil {
		return x.ChainData
	}
	return ""
}

func (x *TokenChain) GetHolding() bool {
	if x != nil {
		return x.Holding
	}
	return false
}

type QuorumSignedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderDID   string  `protobuf:"bytes,1,opt,name=senderDID,proto3" json:"senderDID,omitempty"`
	Credits     string  `protobuf:"bytes,2,opt,name=credits,proto3" json:"credits,omitempty"`
	Sign        string  `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Tid         string  `protobuf:"bytes,4,opt,name=tid,proto3" json:"tid,omitempty"`
	Minestatus  *bool   `protobuf:"varint,5,opt,name=minestatus,proto3,oneof" json:"minestatus,omitempty"`
	ConsensusID *string `protobuf:"bytes,6,opt,name=consensusID,proto3,oneof" json:"consensusID,omitempty"`
}

func (x *QuorumSignedTransaction) Reset() {
	*x = QuorumSignedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumSignedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumSignedTransaction) ProtoMessage() {}

func (x *QuorumSignedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumSignedTransaction.ProtoReflect.Descriptor instead.
func (*QuorumSignedTransaction) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{2}
}

func (x *QuorumSignedTransaction) GetSenderDID() string {
	if x != nil {
		return x.SenderDID
	}
	return ""
}

func (x *QuorumSignedTransaction) GetCredits() string {
	if x != nil {
		return x.Credits
	}
	return ""
}

func (x *QuorumSignedTransaction) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *QuorumSignedTransaction) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *QuorumSignedTransaction) GetMinestatus() bool {
	if x != nil && x.Minestatus != nil {
		return *x.Minestatus
	}
	return false
}

func (x *QuorumSignedTransaction) GetConsensusID() string {
	if x != nil && x.ConsensusID != nil {
		return *x.ConsensusID
	}
	return ""
}

type TransactionHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn         string  `protobuf:"bytes,1,opt,name=txn,proto3" json:"txn,omitempty"`
	SenderDID   string  `protobuf:"bytes,2,opt,name=senderDID,proto3" json:"senderDID,omitempty"`
	ReceiverDID string  `protobuf:"bytes,3,opt,name=receiverDID,proto3" json:"receiverDID,omitempty"`
	Amount      string  `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Date        string  `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Role        string  `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	TotalTime   string  `protobuf:"bytes,7,opt,name=totalTime,proto3" json:"totalTime,omitempty"`
	Comment     string  `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
	Status      string  `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	QuorumList  *string `protobuf:"bytes,10,opt,name=quorumList,proto3,oneof" json:"quorumList,omitempty"`
}

func (x *TransactionHistory) Reset() {
	*x = TransactionHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionHistory) ProtoMessage() {}

func (x *TransactionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionHistory.ProtoReflect.Descriptor instead.
func (*TransactionHistory) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionHistory) GetTxn() string {
	if x != nil {
		return x.Txn
	}
	return ""
}

func (x *TransactionHistory) GetSenderDID() string {
	if x != nil {
		return x.SenderDID
	}
	return ""
}

func (x *TransactionHistory) GetReceiverDID() string {
	if x != nil {
		return x.ReceiverDID
	}
	return ""
}

func (x *TransactionHistory) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionHistory) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TransactionHistory) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *TransactionHistory) GetTotalTime() string {
	if x != nil {
		return x.TotalTime
	}
	return ""
}

func (x *TransactionHistory) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TransactionHistory) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionHistory) GetQuorumList() string {
	if x != nil && x.QuorumList != nil {
		return *x.QuorumList
	}
	return ""
}

type Web3WalletPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DID    *string `protobuf:"bytes,1,opt,name=DID,proto3,oneof" json:"DID,omitempty"`
	Code   int32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	PeerID *string `protobuf:"bytes,3,opt,name=peerID,proto3,oneof" json:"peerID,omitempty"`
}

func (x *Web3WalletPermission) Reset() {
	*x = Web3WalletPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Web3WalletPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Web3WalletPermission) ProtoMessage() {}

func (x *Web3WalletPermission) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Web3WalletPermission.ProtoReflect.Descriptor instead.
func (*Web3WalletPermission) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{4}
}

func (x *Web3WalletPermission) GetDID() string {
	if x != nil && x.DID != nil {
		return *x.DID
	}
	return ""
}

func (x *Web3WalletPermission) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Web3WalletPermission) GetPeerID() string {
	if x != nil && x.PeerID != nil {
		return *x.PeerID
	}
	return ""
}

type P2PConnectionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected bool    `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	Code      int32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message   *string `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *P2PConnectionStatus) Reset() {
	*x = P2PConnectionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PConnectionStatus) ProtoMessage() {}

func (x *P2PConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PConnectionStatus.ProtoReflect.Descriptor instead.
func (*P2PConnectionStatus) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{5}
}

func (x *P2PConnectionStatus) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *P2PConnectionStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *P2PConnectionStatus) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type TxnPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderDID   string  `protobuf:"bytes,1,opt,name=senderDID,proto3" json:"senderDID,omitempty"`
	ReceiverDID string  `protobuf:"bytes,2,opt,name=receiverDID,proto3" json:"receiverDID,omitempty"`
	Amount      string  `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Comment     string  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	QuorumList  *string `protobuf:"bytes,5,opt,name=quorumList,proto3,oneof" json:"quorumList,omitempty"`
}

func (x *TxnPayload) Reset() {
	*x = TxnPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxnPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnPayload) ProtoMessage() {}

func (x *TxnPayload) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnPayload.ProtoReflect.Descriptor instead.
func (*TxnPayload) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{6}
}

func (x *TxnPayload) GetSenderDID() string {
	if x != nil {
		return x.SenderDID
	}
	return ""
}

func (x *TxnPayload) GetReceiverDID() string {
	if x != nil {
		return x.ReceiverDID
	}
	return ""
}

func (x *TxnPayload) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TxnPayload) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TxnPayload) GetQuorumList() string {
	if x != nil && x.QuorumList != nil {
		return *x.QuorumList
	}
	return ""
}

type PushNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification PushNotification_NOTIFICATION_TYPE `protobuf:"varint,1,opt,name=notification,proto3,enum=protos.PushNotification_NOTIFICATION_TYPE" json:"notification,omitempty"`
	Message      *string                            `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	Txn          *TransactionHistory                `protobuf:"bytes,3,opt,name=txn,proto3,oneof" json:"txn,omitempty"`
}

func (x *PushNotification) Reset() {
	*x = PushNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNotification) ProtoMessage() {}

func (x *PushNotification) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNotification.ProtoReflect.Descriptor instead.
func (*PushNotification) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{7}
}

func (x *PushNotification) GetNotification() PushNotification_NOTIFICATION_TYPE {
	if x != nil {
		return x.Notification
	}
	return PushNotification_PAY
}

func (x *PushNotification) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *PushNotification) GetTxn() *TransactionHistory {
	if x != nil {
		return x.Txn
	}
	return nil
}

type TxnStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tid     string                       `protobuf:"bytes,1,opt,name=tid,proto3" json:"tid,omitempty"`
	Status  TxnStatus_TRANSACTION_STATUS `protobuf:"varint,2,opt,name=status,proto3,enum=protos.TxnStatus_TRANSACTION_STATUS" json:"status,omitempty"`
	Message *string                      `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *TxnStatus) Reset() {
	*x = TxnStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxnStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnStatus) ProtoMessage() {}

func (x *TxnStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnStatus.ProtoReflect.Descriptor instead.
func (*TxnStatus) Descriptor() ([]byte, []int) {
	return file_pop_proto_rawDescGZIP(), []int{8}
}

func (x *TxnStatus) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *TxnStatus) GetStatus() TxnStatus_TRANSACTION_STATUS {
	if x != nil {
		return x.Status
	}
	return TxnStatus_SUCCESS
}

func (x *TxnStatus) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

var File_pop_proto protoreflect.FileDescriptor

var file_pop_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xde, 0x02, 0x0a, 0x0f, 0x72, 0x75, 0x62, 0x69, 0x78, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x08, 0x44, 0x49, 0x44, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x44, 0x49, 0x44, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x68, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x02, 0x74, 0x68,
	0x12, 0x31, 0x0a, 0x03, 0x71, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x63, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x02, 0x74, 0x63, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x44, 0x49, 0x44, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x86, 0x01, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xe2, 0x01, 0x0a, 0x17, 0x51,
	0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x44, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x44, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x49, 0x44, 0x22,
	0xaa, 0x02, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x44, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x44, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x44, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x72,
	0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x14,
	0x77, 0x65, 0x62, 0x33, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x03, 0x44, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x44, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x44, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x72, 0x0a, 0x13, 0x70, 0x32, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0a, 0x74, 0x78, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x72,
	0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x71, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8d, 0x02, 0x0a, 0x10, 0x50, 0x75, 0x73,
	0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x03,
	0x74, 0x78, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x01, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x88, 0x01, 0x01, 0x22,
	0x43, 0x0a, 0x11, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x41, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4d, 0x49, 0x4e,
	0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x03, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x78, 0x6e, 0x22, 0xd3, 0x01, 0x0a, 0x09, 0x74, 0x78, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x74, 0x78, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x22, 0x4b, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xd6,
	0x03, 0x0a, 0x0a, 0x50, 0x4f, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a,
	0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x77, 0x65, 0x62,
	0x33, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x32, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x77, 0x65, 0x62,
	0x33, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x72, 0x75, 0x62, 0x69, 0x78,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4b,
	0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x72, 0x75, 0x62, 0x69,
	0x78, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x14, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x77, 0x65, 0x62,
	0x33, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x32, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x62, 0x69, 0x78, 0x54, 0x78, 0x6e,
	0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x78, 0x6e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x78,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x12, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x66, 0x65, 0x78, 0x72, 0x2f, 0x67, 0x6f,
	0x66, 0x65, 0x78, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pop_proto_rawDescOnce sync.Once
	file_pop_proto_rawDescData = file_pop_proto_rawDesc
)

func file_pop_proto_rawDescGZIP() []byte {
	file_pop_proto_rawDescOnce.Do(func() {
		file_pop_proto_rawDescData = protoimpl.X.CompressGZIP(file_pop_proto_rawDescData)
	})
	return file_pop_proto_rawDescData
}

var file_pop_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pop_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pop_proto_goTypes = []interface{}{
	(PushNotification_NOTIFICATION_TYPE)(0), // 0: protos.PushNotification.NOTIFICATION_TYPE
	(TxnStatus_TRANSACTION_STATUS)(0),       // 1: protos.txnStatus.TRANSACTION_STATUS
	(*RubixWalletData)(nil),                 // 2: protos.rubixWalletData
	(*TokenChain)(nil),                      // 3: protos.TokenChain
	(*QuorumSignedTransaction)(nil),         // 4: protos.QuorumSignedTransaction
	(*TransactionHistory)(nil),              // 5: protos.TransactionHistory
	(*Web3WalletPermission)(nil),            // 6: protos.web3WalletPermission
	(*P2PConnectionStatus)(nil),             // 7: protos.p2pConnectionStatus
	(*TxnPayload)(nil),                      // 8: protos.txnPayload
	(*PushNotification)(nil),                // 9: protos.PushNotification
	(*TxnStatus)(nil),                       // 10: protos.txnStatus
	(*emptypb.Empty)(nil),                   // 11: google.protobuf.Empty
}
var file_pop_proto_depIdxs = []int32{
	5,  // 0: protos.rubixWalletData.th:type_name -> protos.TransactionHistory
	4,  // 1: protos.rubixWalletData.qst:type_name -> protos.QuorumSignedTransaction
	3,  // 2: protos.rubixWalletData.tc:type_name -> protos.TokenChain
	0,  // 3: protos.PushNotification.notification:type_name -> protos.PushNotification.NOTIFICATION_TYPE
	5,  // 4: protos.PushNotification.txn:type_name -> protos.TransactionHistory
	1,  // 5: protos.txnStatus.status:type_name -> protos.txnStatus.TRANSACTION_STATUS
	6,  // 6: protos.POPService.ValidatePermission:input_type -> protos.web3WalletPermission
	6,  // 7: protos.POPService.FetchWalletData:input_type -> protos.web3WalletPermission
	2,  // 8: protos.POPService.UploadWalletKeys:input_type -> protos.rubixWalletData
	6,  // 9: protos.POPService.InvalidatePermission:input_type -> protos.web3WalletPermission
	8,  // 10: protos.POPService.InitRubixTxn:input_type -> protos.txnPayload
	11, // 11: protos.POPService.WalletNotification:input_type -> google.protobuf.Empty
	7,  // 12: protos.POPService.ValidatePermission:output_type -> protos.p2pConnectionStatus
	2,  // 13: protos.POPService.FetchWalletData:output_type -> protos.rubixWalletData
	6,  // 14: protos.POPService.UploadWalletKeys:output_type -> protos.web3WalletPermission
	7,  // 15: protos.POPService.InvalidatePermission:output_type -> protos.p2pConnectionStatus
	10, // 16: protos.POPService.InitRubixTxn:output_type -> protos.txnStatus
	9,  // 17: protos.POPService.WalletNotification:output_type -> protos.PushNotification
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pop_proto_init() }
func file_pop_proto_init() {
	if File_pop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RubixWalletData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumSignedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Web3WalletPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PConnectionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxnPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxnStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pop_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_pop_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_pop_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_pop_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_pop_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_pop_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_pop_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_pop_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pop_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pop_proto_goTypes,
		DependencyIndexes: file_pop_proto_depIdxs,
		EnumInfos:         file_pop_proto_enumTypes,
		MessageInfos:      file_pop_proto_msgTypes,
	}.Build()
	File_pop_proto = out.File
	file_pop_proto_rawDesc = nil
	file_pop_proto_goTypes = nil
	file_pop_proto_depIdxs = nil
}
